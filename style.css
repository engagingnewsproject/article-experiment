/* =Reset
-------------------------------------------------------------- */
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, font, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td {
  border: 0;
  font-family: inherit;
  font-size: 100%;
  font-style: inherit;
  font-weight: inherit;
  margin: 0;
  outline: 0;
  padding: 0;
  vertical-align: baseline; }

html {
  font-size: 100%;
  /* Corrects text resizing oddly in IE6/7 when body font-size is set using em units http://clagnut.com/blog/348/#c790 */
  overflow-y: scroll;
  /* Keeps page centred in all browsers regardless of content height */
  -webkit-text-size-adjust: 100%;
  /* Prevents iOS text size adjust after orientation change, without disabling user zoom */
  -ms-text-size-adjust: 100%;
  /* www.456bereastreet.com/archive/201012/controlling_text_size_in_safari_for_ios_without_disabling_user_zoom/ */ }

body {
  background: #fff;
  overflow: hidden; }

article, aside, details, figcaption, figure, footer, header, nav, section {
  display: block; }

ol, ul {
  list-style: none; }

table {
  /* tables still need 'cellspacing="0"' in the markup */
  border-collapse: separate;
  border-spacing: 0; }

caption, th, td {
  font-weight: normal;
  text-align: left; }

blockquote:before, blockquote:after, q:before, q:after {
  content: ""; }

blockquote, q {
  quotes: "" ""; }

a:focus {
  outline: thin dotted; }

a:hover, a:active {
  /* Improves readability when focused and also mouse hovered in all browsers people.opera.com/patrickl/experiments/keyboard/test */
  outline: 0; }

a img {
  border: 0; }

/* Reseting to border-box so we can do 100% width with 20px and not mess stuff up. */
html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

/* Text meant only for screen readers */
.screen-reader-text {
  clip: rect(1px, 1px, 1px, 1px);
  position: absolute !important; }

.screen-reader-text:hover, .screen-reader-text:active, .screen-reader-text:focus {
  background-color: #f1f1f1;
  border-radius: 3px;
  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
  clip: auto !important;
  color: #21759b;
  display: block;
  font-size: 14px;
  font-weight: bold;
  height: auto;
  left: 5px;
  line-height: normal;
  padding: 15px 23px 14px;
  text-decoration: none;
  top: 5px;
  width: auto;
  z-index: 100000;
  /* Above WP toolbar */ }

.primary {
  color: #356d99; }

.primary-bg {
  background: #356d99; }

.secondary {
  color: #0A3348; }

.secondary-bg {
  background: #0A3348; }

.row:after, .container:after, .clr:after, .group:after, [class*="content"]:after, [class*="site"]:after {
  content: "";
  display: table;
  clear: both; }

.row, .container {
  max-width: 640px;
  margin-left: auto;
  margin-right: auto; }

.row, .container {
  padding-left: 20px;
  padding-right: 20px; }

@media screen and (min-width: 34em) {
  .container--wide, .row--wide {
    max-width: 840px; } }

/*  SELF CLEARING FLOATS - CLEARFIX METHOD */
/* Clearing */
body {
  color: #333;
  font-family: "adobe-text-pro", georgia, times, serif;
  font-size: 1.2em;
  line-height: 1.6;
  font-weight: 400; }
  @media screen and (min-width: 34em) {
    body {
      font-size: 1.3em; } }

/* Headings */
h1, h2, h3, h4, h5, h6 {
  font-family: "adobe-text-pro", georgia, times, serif;
  color: #333;
  clear: both;
  margin: 0 0 .2rem;
  font-weight: bold;
  line-height: 1.2em; }

h1 {
  font-size: 2.8em; }

h2 {
  font-size: 1.9em; }

h3 {
  font-size: 1.475em; }

h4 {
  font-size: 1.3em; }

h5 {
  font-size: 1.125em; }

h6 {
  font-size: 1em; }

p + h1, ul + h1, p + h2, ul + h2, p + h3, ul + h3, p + h4, ul + h4, p + h5, ul + h5, p + h6, ul + h6 {
  margin-top: 1.8em; }

/* Text elements */
p {
  font-size: 1em;
  margin-bottom: 1.125em;
  font-weight: 300; }

ul, ol {
  margin: 0 0 1.6em 1.25em; }

ul {
  list-style: disc; }

ol {
  list-style: decimal; }

li > ul, li > ol {
  margin-bottom: 0;
  margin-left: 1.6em; }

b, strong {
  font-weight: bold; }

dfn, cite, em {
  font-family: georgia, times, serif;
  font-style: italic; }

pre {
  background: #eee;
  font-family: "Courier 10 Pitch", Courier, monospace;
  font-size: .95em;
  line-height: 1.6;
  margin-bottom: 1.6em;
  padding: 1.6em;
  overflow: auto;
  max-width: 100%; }

code, kbd, tt, var {
  font: .95em Monaco, Consolas, "Andale Mono", "DejaVu Sans Mono", monospace; }

figure {
  margin: 0; }

img {
  height: auto;
  /* Make sure images are scaled correctly. */
  max-width: 100%;
  /* Adhere to container width. */ }

label {
  display: block;
  font-family: Arial, Helvetica, sans-serif;
  font-size: .75em; }

input[type="text"], textarea {
  font-size: .85em;
  font-family: "adobe-text-pro", georgia, times, serif;
  padding: .375em;
  border: 1px solid #bbb;
  border-bottom: 1px solid #999;
  border-radius: 3px;
  min-width: 275px;
  margin-bottom: 1.2em; }

textarea {
  width: 100%; }

/* Links */
a {
  color: #209AAE;
  text-decoration: none;
  -webkit-transition: color .2s;
          transition: color .2s;
  -ms-touch-action: manipulation;
      touch-action: manipulation; }

a:hover, a:focus, a:active {
  color: #187483; }

.hint {
  font-size: .9em;
  color: #595959; }

.dropcap {
  float: left;
  font-size: 6em;
  line-height: .79;
  margin-top: -2rem;
  padding: 0 .3rem 0 0; }

article h3 {
  margin-bottom: .2em; }

body {
  padding-top: 1em; }

.center {
  text-align: center; }

.btn {
  padding: .8em 1.4em;
  color: #fff;
  background: #333;
  text-transform: uppercase;
  -webkit-transition: all .2s;
          transition: all .2s; }

.btn:hover {
  color: #fff;
  background: #1a1a1a; }

.btn:active {
  color: #fff;
  background: #4d4d4d; }

.btn-submit {
  border: none;
  font-size: .85em;
  font-family: "adobe-text-pro", georgia, times, serif;
  cursor: pointer;
  padding: .75em 1.6em; }

.site-title {
  font-size: 1.1em;
  border-bottom: 3px solid #333; }

article {
  margin: 2em 0 2em; }

.article-header {
  margin-bottom: 5.5em; }

.article-title {
  font-size: 2.2em; }

.article-img {
  display: block;
  margin: 0 auto 2em; }
  @media screen and (min-width: 34em) {
    .article-img {
      max-width: 150%;
      margin-left: -15%; } }

.article-img--featured {
  margin-top: -3em;
  margin-bottom: 4em; }

.byline {
  color: #000;
  font-size: .75em; }

.author {
  text-transform: uppercase;
  margin-right: .8em; }

.pubdate {
  color: #535353; }

.social-share {
  list-style: none;
  margin: 1em 0 0; }
  .social-share .social-share__item {
    font-family: Arial, 'helvetica neue', Helvetica, sans-serif;
    display: inline-block;
    margin-right: .2em;
    margin-bottom: 1em; }
  .social-share .social-share__link {
    color: #fff;
    padding: 0.8em 1.2em 0.8em 1.4em;
    background: #ddd;
    font-size: .7em; }
  .social-share .social-share__link--facebook {
    background: #3b5998;
    padding-left: 1em; }
  .social-share .social-share__link--twitter {
    background: #4099ff; }
  .social-share .icon-social {
    position: relative;
    top: 0.4em;
    left: -0.4em;
    font-size: 1em; }
  .social-share .icon-social--facebook {
    left: -0.2em; }
  .social-share svg {
    width: 1.5em;
    height: 1.5em;
    fill: #fff; }

.show-comments-wrap {
  margin: 2em 0 2em;
  padding: 4em 0 2em;
  text-align: center;
  border-top: 2px solid #333;
  font-size: .9em; }

.comments-section {
  margin-top: 5em;
  margin-bottom: 2em; }
  .comments-section .comments {
    list-style: none;
    margin: 0; }
  .comments-section .comment-section-title {
    font-size: 1em;
    text-transform: uppercase;
    border-bottom: 2px solid #333; }
  .comments-section .comment {
    border-top: 1px solid #999999;
    padding-top: 2em;
    padding-bottom: 2em; }
    @media screen and (min-width: 34em) {
      .comments-section .comment {
        padding-left: 0.6em;
        padding-right: 0.6em; } }
    .comments-section .comment:first-child {
      border-top: none; }
  .comments-section .comment-info {
    font-family: Arial, Helvetica, sans-serif;
    font-size: .8em;
    margin-bottom: 0; }
  .comments-section .comment-name {
    font-weight: bold;
    margin-right: .375em; }
  .comments-section .comment-time {
    font-size: .8em;
    color: #999999; }

.new-comment {
  margin-top: 1em; }
  .new-comment .add-comment-title {
    font-size: 1em;
    text-transform: uppercase;
    border-bottom: 2px solid #333; }
  .new-comment .add-comment {
    padding: 1em 0; }
    @media screen and (min-width: 34em) {
      .new-comment .add-comment {
        margin: 0 auto;
        width: 80%; } }

.alert {
  padding: 1em;
  font-size: .8em;
  font-family: Arial, Helvetica, sans-serif;
  background: #ddd; }

.alert-success {
  background: #D5EBCE; }

.alert-error {
  background: #FCDCDC; }

.colophon {
  margin-top: 2em;
  padding-bottom: 1em;
  font-size: .85em; }
  .colophon .row {
    border-top: 3px solid #333;
    padding: 1em 0 0; }
  .colophon .copyright {
    margin-bottom: 0; }


/*# sourceMappingURL=data:application/json;base64, */